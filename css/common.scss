
//
// Functions / mixins
//
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);
	
	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}
	
	@return $string;
}

@function tint( $color, $percent ) {
	@return mix(white, $color, $percent);
}

@function shade( $color, $percent ) {
	@return mix(black, $color, $percent);
}

@mixin gradient( $from, $to ) {
	background-color: $from;
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$from), color-stop(100%,$to)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,     $from 0%, $to 100%); /* Chrome10+,Safari5.1+ */
	background:    -moz-linear-gradient(top,     $from 0%, $to 100%); /* FF3.6+ */
	background:     -ms-linear-gradient(top,     $from 0%, $to 100%); /* IE10+ */
	background:      -o-linear-gradient(top,     $from 0%, $to 100%); /* Opera 11.10+ */
	background:         linear-gradient(to bottom, $from 0%, $to 100%); /* W3C */
}

//
// Variables
//

// Row background colour (hover, striping etc are all based on this colour and
// calculated automatically)
$table-row-background: transparent !default;

// Border between the header (and footer) and the table body
$table-header-border: 1px solid shade($table-row-background, 30%) !default;
$table-header-border-dark: 1px solid rgb(89, 91, 94) !default;

// Border of rows / cells
$table-body-border: 1px solid shade($table-row-background, 15%) !default;
$table-body-border-dark: 1px solid rgb(64, 67, 70) !default;

// Row colour, when selected (tr.selected) and used for processing display
// These are SCSS lists in `r g b` format
$table-row-selected: 13 110 253 !default;
$table-row-selected-text: 255 255 255 !default;
$table-row-selected-link: 9 10 11 !default;

// Text colour of the interaction control elements (info, filter, paging etc)
$table-control-color: inherit !default;

// Highlight colour of the paging button for the current page
$table-paging-button-active: rgba(0, 0, 0, 0.1) !default;

// Hover colour of paging buttons on mouse over
$table-paging-button-hover: #111 !default;

// Colour to use when shading
$table-shade: black !default;

$control-button-top: 9px !default;
$control-button-size: 1em !default;
$control-button-color: white !default;
$open-button-background: #31b131 !default;
$close-button-background: #d33333 !default;

:root {
	--dt-row-selected: #{str-replace(#{$table-row-selected}, ' ', ', ')};
	--dt-row-selected-text: #{str-replace(#{$table-row-selected-text}, ' ', ', ')};
	--dt-row-selected-link: #{str-replace(#{$table-row-selected-link}, ' ', ', ')};
	--dt-row-stripe: 0, 0, 0, 0.023;
	--dt-row-hover: 0, 0, 0;
	--dt-column-ordering: 0, 0, 0;
}

//
// Mixins
//
@mixin control() {
	display: inline-block;
	color: $control-button-color;
	border: 0.15em solid white;
	border-radius: 1em;
	box-shadow: 0 0 0.2em #444;
	box-sizing: content-box;
	text-align: center;
	text-indent: 0 !important;

	// Use Courier New because it is common and consistent
	font-family: 'Courier New', Courier, monospace;
	line-height: 1em;
}

@mixin control-open() {
	content: '+';
	background-color: $open-button-background;
}

@mixin control-close() {
	content: '-';
	background-color: $close-button-background;
}

// Standard row striping with a box shadow
@mixin row-stripes($stripeSel, $hoverSel, $stripeShade: 0.023, $hoverShade: 0.075, $oddEven: '.odd') {
    // Standard rows without striping
	> tbody > tr {
		background-color: $table-row-background;

		&.selected > * {
			box-shadow: inset 0 0 0 9999px rgb($table-row-selected);
			box-shadow: inset 0 0 0 9999px rgb(var(--dt-row-selected));
			color: rgb($table-row-selected-text);
			color: rgb(var(--dt-row-selected-text));
		}

		&.selected a {
			color: rgb($table-row-selected-link);
			color: rgb(var(--dt-row-selected-link));
		}
	}

    // With striping
	&#{$stripeSel} > tbody {
		> tr#{$oddEven} > * {
			box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, $stripeShade);
		}

		> tr#{$oddEven}.selected > * {
			box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), $stripeShade + 0.9);
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), $stripeShade + 0.9);
		}
	}

	// Hovering
	&#{$hoverSel} > tbody {
		> tr:hover > * {
			box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, $hoverShade);
		}

		> tr.selected:hover > * {
			box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), $hoverShade + 0.9);
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), $hoverShade + 0.9);
		}
	}
}

table.dataTable {
    // Child row controls
    td.dt-control {
        text-align: center;
        cursor: pointer;
    
        &:before {
            height: $control-button-size;
            width: $control-button-size;
            margin-top: -$control-button-top;
            @include control;
            @include control-open;
        }
    }
    
    tr.dt-hasChild {
        td.dt-control:before {
            @include control-close;
        }
    }
}